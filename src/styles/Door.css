body {
  margin: 0;
  overflow-x: hidden; /* Prevent horizontal scrolling */
  overflow-y: hidden;
}

.door-container {
  position: relative; /* Fix the door-container to the viewport */
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 10; /* Ensure it is above the invitation background */
  pointer-events: none; /* Prevent the door-container from blocking interactions */
  overflow-x: hidden; /* Prevent horizontal scrolling */
}

.door-container.no-z-index {
  z-index: auto; /* Remove z-index after doors are fully opened */
}

.wrapper {
  perspective: 1000px;
  position: relative;
  width: 100%;
  height: 100%;
  pointer-events: auto; /* Allow interactions with the doors */
}

.door {
  position: absolute;
  top: 0;
  width: 50vw;
  height: 100vh;
  background-size: cover !important;
  background-repeat: no-repeat !important;
  transition: transform 2s ease-in-out;
  z-index: 10;
}

.door-1 {
  left: 0;
  background: url('../images/door1.jpg') right center no-repeat;
  transform-origin: left;
}

.door-2 {
  right: 0;
  background: url('../images/door2.jpg') left center no-repeat;
  transform-origin: right;
}

.wrapper.transformed #door-1 {
  transform: rotateY(-130deg);
  visibility: hidden; /* Hide the door completely after it opens */
}

.wrapper.transformed #door-2 {
  transform: rotateY(130deg);
  visibility: hidden; /* Hide the door completely after it opens */
}

/* Optional: Add a delay to ensure the doors are hidden after the animation */
.wrapper.transformed #door-1,
.wrapper.transformed #door-2 {
  transition: transform 2s ease-in-out, visibility 0s 2s; /* Delay hiding visibility */
}

.invitation-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1; /* Render behind the doors */
  background-color: white; /* Ensure a visible background */
  overflow-y: auto; /* Allow vertical scrolling */
  overflow-x: hidden; /* Prevent horizontal scrolling */
  display: flex; /* Ensure proper layout */
  flex-direction: column; /* Stack content vertically */
  box-sizing: border-box; /* Include padding in width calculations */
}

.knob {
  position: absolute;
  top: 50%;
  left: 95%;
  transform: translate(-50%, -50%);
  width: 10vw; /* Adjust for mobile */
  height: 5vh; /* Adjust for mobile */
  background-color: gold;
  border-radius: 50%;
}

@media (max-width: 768px) {
  /* Mobile styles */
  .door {
    width: 50vw;
  }

  .knob {
    width: 8vw;
    height: 4vh;
  }
}